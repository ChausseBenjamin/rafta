// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.31.1
// source: schema.proto

package model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the possible states of a task.
type TaskState int32

const (
	TaskState_UNSPECIFIED TaskState = 0 // Recommended by protobuf
	TaskState_PENDING     TaskState = 1
	TaskState_ONGOING     TaskState = 2
	TaskState_DONE        TaskState = 3
	TaskState_BLOCKED     TaskState = 4
)

// Enum value maps for TaskState.
var (
	TaskState_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "PENDING",
		2: "ONGOING",
		3: "DONE",
		4: "BLOCKED",
	}
	TaskState_value = map[string]int32{
		"UNSPECIFIED": 0,
		"PENDING":     1,
		"ONGOING":     2,
		"DONE":        3,
		"BLOCKED":     4,
	}
)

func (x TaskState) Enum() *TaskState {
	p := new(TaskState)
	*p = x
	return p
}

func (x TaskState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskState) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_proto_enumTypes[0].Descriptor()
}

func (TaskState) Type() protoreflect.EnumType {
	return &file_schema_proto_enumTypes[0]
}

func (x TaskState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskState.Descriptor instead.
func (TaskState) EnumDescriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{0}
}

// When updating tasks, it is wasteful to send information that hasn't
// changed (especially the description which is an entire markdown file.
// Include in update requests the list of all fields that need changing
// using this enum to identify each field.
type TaskFieldMask int32

const (
	TaskFieldMask_TITLE      TaskFieldMask = 0 // Binds to TaskData.title
	TaskFieldMask_DESC       TaskFieldMask = 1 // Binds to TaskData.desc
	TaskFieldMask_PRIORITY   TaskFieldMask = 2 // Binds to TaskData.priority
	TaskFieldMask_STATE      TaskFieldMask = 3 // Binds to TaskData.state
	TaskFieldMask_RECURRENCE TaskFieldMask = 4 // Binds to TaskData.recurrence
	TaskFieldMask_TAGS       TaskFieldMask = 7 // Binds to TaskData.tags
)

// Enum value maps for TaskFieldMask.
var (
	TaskFieldMask_name = map[int32]string{
		0: "TITLE",
		1: "DESC",
		2: "PRIORITY",
		3: "STATE",
		4: "RECURRENCE",
		7: "TAGS",
	}
	TaskFieldMask_value = map[string]int32{
		"TITLE":      0,
		"DESC":       1,
		"PRIORITY":   2,
		"STATE":      3,
		"RECURRENCE": 4,
		"TAGS":       7,
	}
)

func (x TaskFieldMask) Enum() *TaskFieldMask {
	p := new(TaskFieldMask)
	*p = x
	return p
}

func (x TaskFieldMask) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskFieldMask) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_proto_enumTypes[1].Descriptor()
}

func (TaskFieldMask) Type() protoreflect.EnumType {
	return &file_schema_proto_enumTypes[1]
}

func (x TaskFieldMask) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskFieldMask.Descriptor instead.
func (TaskFieldMask) EnumDescriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{1}
}

// Represents a universally unique identifier (UUID) used to identify both
// users and tasks.
type UUID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UUID) Reset() {
	*x = UUID{}
	mi := &file_schema_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UUID) ProtoMessage() {}

func (x *UUID) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UUID.ProtoReflect.Descriptor instead.
func (*UUID) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{0}
}

func (x *UUID) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Non-sensitive editable information about a user
type UserData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email         string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserData) Reset() {
	*x = UserData{}
	mi := &file_schema_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserData) ProtoMessage() {}

func (x *UserData) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserData.ProtoReflect.Descriptor instead.
func (*UserData) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{1}
}

func (x *UserData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type UserRoles struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Roles         []string               `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserRoles) Reset() {
	*x = UserRoles{}
	mi := &file_schema_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserRoles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRoles) ProtoMessage() {}

func (x *UserRoles) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRoles.ProtoReflect.Descriptor instead.
func (*UserRoles) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{2}
}

func (x *UserRoles) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type UpdateUserRolesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        *UUID                  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Roles         []string               `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserRolesRequest) Reset() {
	*x = UpdateUserRolesRequest{}
	mi := &file_schema_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRolesRequest) ProtoMessage() {}

func (x *UpdateUserRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRolesRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRolesRequest) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateUserRolesRequest) GetUserId() *UUID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *UpdateUserRolesRequest) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

// Information about a user that is not directly under his control.
// Roles aren't included here as they are part of any JWT.
type UserMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Timestamp when the user was created.
	CreatedOn *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_on,json=createdOn,proto3" json:"created_on,omitempty"`
	// Timestamp when the user's info was last updated.
	// This only relates to name, username, password
	// (creating/editing/deleteting doesn't affect this).
	UpdatedOn     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_on,json=updatedOn,proto3" json:"updated_on,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserMetadata) Reset() {
	*x = UserMetadata{}
	mi := &file_schema_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMetadata) ProtoMessage() {}

func (x *UserMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMetadata.ProtoReflect.Descriptor instead.
func (*UserMetadata) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{4}
}

func (x *UserMetadata) GetCreatedOn() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedOn
	}
	return nil
}

func (x *UserMetadata) GetUpdatedOn() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedOn
	}
	return nil
}

// Represents a user with his associated data and metadata.
type User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *UUID                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data          *UserData              `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Metadata      *UserMetadata          `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_schema_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{5}
}

func (x *User) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *User) GetData() *UserData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *User) GetMetadata() *UserMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Represents task the recurrence
// WIP: a custom library will be developed to generate recurrence
// instructions in the context of a tasks application.
type TaskRecurrence struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Parseable recurrence pattern (ex: cron expression)
	Pattern string `protobuf:"bytes,1,opt,name=pattern,proto3" json:"pattern,omitempty"`
	// Whether the task is currently recurring. If not, a new task doesn't get
	// automatically created upon completion.
	Active        bool `protobuf:"varint,2,opt,name=active,proto3" json:"active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskRecurrence) Reset() {
	*x = TaskRecurrence{}
	mi := &file_schema_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskRecurrence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRecurrence) ProtoMessage() {}

func (x *TaskRecurrence) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRecurrence.ProtoReflect.Descriptor instead.
func (*TaskRecurrence) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{6}
}

func (x *TaskRecurrence) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

func (x *TaskRecurrence) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

// Represents the data associated with a task.
type TaskData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                    // Task title.
	Desc          string                 `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`                      // Task description in markdown format.
	Priority      uint32                 `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`             // Task priority (0=undefined, 1=highest, 0xFFFFFFFF=lowest).
	State         TaskState              `protobuf:"varint,4,opt,name=state,proto3,enum=TaskState" json:"state,omitempty"`    // Current state of the task.
	Recurrence    *TaskRecurrence        `protobuf:"bytes,5,opt,name=recurrence,proto3" json:"recurrence,omitempty"`          // Recurrence details of the task.
	DoDate        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=do_date,json=doDate,proto3" json:"do_date,omitempty"`    // Date when the task should be started.
	DueDate       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"` // Deadline for the task.
	Tags          []string               `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`                      // Tags associated with the task.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskData) Reset() {
	*x = TaskData{}
	mi := &file_schema_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskData) ProtoMessage() {}

func (x *TaskData) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskData.ProtoReflect.Descriptor instead.
func (*TaskData) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{7}
}

func (x *TaskData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TaskData) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *TaskData) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *TaskData) GetState() TaskState {
	if x != nil {
		return x.State
	}
	return TaskState_UNSPECIFIED
}

func (x *TaskData) GetRecurrence() *TaskRecurrence {
	if x != nil {
		return x.Recurrence
	}
	return nil
}

func (x *TaskData) GetDoDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DoDate
	}
	return nil
}

func (x *TaskData) GetDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DueDate
	}
	return nil
}

func (x *TaskData) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// Represents metadata associated with a task.
type TaskMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CreatedOn     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_on,json=createdOn,proto3" json:"created_on,omitempty"` // Timestamp when the task was created.
	UpdatedOn     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_on,json=updatedOn,proto3" json:"updated_on,omitempty"` // Timestamp when the task was last updated.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskMetadata) Reset() {
	*x = TaskMetadata{}
	mi := &file_schema_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskMetadata) ProtoMessage() {}

func (x *TaskMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskMetadata.ProtoReflect.Descriptor instead.
func (*TaskMetadata) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{8}
}

func (x *TaskMetadata) GetCreatedOn() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedOn
	}
	return nil
}

func (x *TaskMetadata) GetUpdatedOn() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedOn
	}
	return nil
}

// Represents a request to update a task.
type TaskUpdateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *UUID                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                  // Unique identifier of the task to update.
	Data          *TaskData              `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`                              // Updated task data.
	Masks         []TaskFieldMask        `protobuf:"varint,3,rep,packed,name=masks,proto3,enum=TaskFieldMask" json:"masks,omitempty"` // Fields to update.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskUpdateRequest) Reset() {
	*x = TaskUpdateRequest{}
	mi := &file_schema_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskUpdateRequest) ProtoMessage() {}

func (x *TaskUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskUpdateRequest.ProtoReflect.Descriptor instead.
func (*TaskUpdateRequest) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{9}
}

func (x *TaskUpdateRequest) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *TaskUpdateRequest) GetData() *TaskData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TaskUpdateRequest) GetMasks() []TaskFieldMask {
	if x != nil {
		return x.Masks
	}
	return nil
}

// Represents a response to a task update request.
type TaskUpdateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Only part of the Tasks metadata that changes
	UpdatedOn *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_on,json=updatedOn,proto3" json:"updated_on,omitempty"`
	// If the update request marked as complete a recurring task, the new task
	// resulting from the completion gets sent back to the client.
	NewTask       *Task `protobuf:"bytes,3,opt,name=new_task,json=newTask,proto3" json:"new_task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskUpdateResponse) Reset() {
	*x = TaskUpdateResponse{}
	mi := &file_schema_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskUpdateResponse) ProtoMessage() {}

func (x *TaskUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskUpdateResponse.ProtoReflect.Descriptor instead.
func (*TaskUpdateResponse) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{10}
}

func (x *TaskUpdateResponse) GetUpdatedOn() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedOn
	}
	return nil
}

func (x *TaskUpdateResponse) GetNewTask() *Task {
	if x != nil {
		return x.NewTask
	}
	return nil
}

// Represents a task with associated data and metadata.
type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *UUID                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`             // Unique identifier for the task.
	Data          *TaskData              `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`         // Task data.
	Metadata      *TaskMetadata          `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"` // Metadata about the task.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_schema_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{11}
}

func (x *Task) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Task) GetData() *TaskData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Task) GetMetadata() *TaskMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Represents the response to creating a new task.
type NewTaskResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier of the newly created task.
	Id *UUID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata of the newly created task.
	Metadata      *TaskMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewTaskResponse) Reset() {
	*x = NewTaskResponse{}
	mi := &file_schema_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewTaskResponse) ProtoMessage() {}

func (x *NewTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewTaskResponse.ProtoReflect.Descriptor instead.
func (*NewTaskResponse) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{12}
}

func (x *NewTaskResponse) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *NewTaskResponse) GetMetadata() *TaskMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Represents a list of tasks.
type TaskList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tasks         []*Task                `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"` // List of tasks.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskList) Reset() {
	*x = TaskList{}
	mi := &file_schema_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskList) ProtoMessage() {}

func (x *TaskList) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskList.ProtoReflect.Descriptor instead.
func (*TaskList) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{13}
}

func (x *TaskList) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

// Represents a list of users.
type UserList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*User                `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"` // List of users.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserList) Reset() {
	*x = UserList{}
	mi := &file_schema_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserList) ProtoMessage() {}

func (x *UserList) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserList.ProtoReflect.Descriptor instead.
func (*UserList) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{14}
}

func (x *UserList) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

// Represents JSON Web Tokens (JWT) for authentication.
type JWT struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Access        string                 `protobuf:"bytes,1,opt,name=access,proto3" json:"access,omitempty"`   // Access token.
	Refresh       string                 `protobuf:"bytes,2,opt,name=refresh,proto3" json:"refresh,omitempty"` // Refresh token.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JWT) Reset() {
	*x = JWT{}
	mi := &file_schema_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JWT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JWT) ProtoMessage() {}

func (x *JWT) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JWT.ProtoReflect.Descriptor instead.
func (*JWT) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{15}
}

func (x *JWT) GetAccess() string {
	if x != nil {
		return x.Access
	}
	return ""
}

func (x *JWT) GetRefresh() string {
	if x != nil {
		return x.Refresh
	}
	return ""
}

// Represents the response to a login request.
type LoginResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`     // Authenticated user.
	Tokens        *JWT                   `protobuf:"bytes,2,opt,name=tokens,proto3" json:"tokens,omitempty"` // Authentication tokens.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	mi := &file_schema_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{16}
}

func (x *LoginResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *LoginResponse) GetTokens() *JWT {
	if x != nil {
		return x.Tokens
	}
	return nil
}

// Represents a request to sign up a new user.
type UserSignupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *UserData              `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`                               // Data of the user to sign up.
	UserSecret    string                 `protobuf:"bytes,2,opt,name=user_secret,json=userSecret,proto3" json:"user_secret,omitempty"` // Secret (e.g., password) for the user.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserSignupRequest) Reset() {
	*x = UserSignupRequest{}
	mi := &file_schema_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserSignupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSignupRequest) ProtoMessage() {}

func (x *UserSignupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSignupRequest.ProtoReflect.Descriptor instead.
func (*UserSignupRequest) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{17}
}

func (x *UserSignupRequest) GetUser() *UserData {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserSignupRequest) GetUserSecret() string {
	if x != nil {
		return x.UserSecret
	}
	return ""
}

// Represents a request to refresh authentication tokens.
type RefreshRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RefreshToken  string                 `protobuf:"bytes,1,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"` // Refresh token.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshRequest) Reset() {
	*x = RefreshRequest{}
	mi := &file_schema_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshRequest) ProtoMessage() {}

func (x *RefreshRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshRequest.ProtoReflect.Descriptor instead.
func (*RefreshRequest) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{18}
}

func (x *RefreshRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

// Represents a request to change a user's password.
type ChangePasswdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *UUID                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`         // Unique identifier of the user.
	Secret        string                 `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"` // New password.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangePasswdRequest) Reset() {
	*x = ChangePasswdRequest{}
	mi := &file_schema_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangePasswdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePasswdRequest) ProtoMessage() {}

func (x *ChangePasswdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePasswdRequest.ProtoReflect.Descriptor instead.
func (*ChangePasswdRequest) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{19}
}

func (x *ChangePasswdRequest) GetId() *UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ChangePasswdRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

// Represents a password message.
type PasswdMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Secret        string                 `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"` // Password.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PasswdMessage) Reset() {
	*x = PasswdMessage{}
	mi := &file_schema_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PasswdMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswdMessage) ProtoMessage() {}

func (x *PasswdMessage) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswdMessage.ProtoReflect.Descriptor instead.
func (*PasswdMessage) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{20}
}

func (x *PasswdMessage) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

var File_schema_proto protoreflect.FileDescriptor

const file_schema_proto_rawDesc = "" +
	"\n" +
	"\fschema.proto\x1a(protobuf/src/google/protobuf/empty.proto\x1a,protobuf/src/google/protobuf/timestamp.proto\"\x1c\n" +
	"\x04UUID\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"4\n" +
	"\bUserData\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05email\x18\x02 \x01(\tR\x05email\"!\n" +
	"\tUserRoles\x12\x14\n" +
	"\x05roles\x18\x01 \x03(\tR\x05roles\"N\n" +
	"\x16UpdateUserRolesRequest\x12\x1e\n" +
	"\auser_id\x18\x01 \x01(\v2\x05.UUIDR\x06userId\x12\x14\n" +
	"\x05roles\x18\x02 \x03(\tR\x05roles\"\x84\x01\n" +
	"\fUserMetadata\x129\n" +
	"\n" +
	"created_on\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedOn\x129\n" +
	"\n" +
	"updated_on\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedOn\"g\n" +
	"\x04User\x12\x15\n" +
	"\x02id\x18\x01 \x01(\v2\x05.UUIDR\x02id\x12\x1d\n" +
	"\x04data\x18\x02 \x01(\v2\t.UserDataR\x04data\x12)\n" +
	"\bmetadata\x18\x03 \x01(\v2\r.UserMetadataR\bmetadata\"B\n" +
	"\x0eTaskRecurrence\x12\x18\n" +
	"\apattern\x18\x01 \x01(\tR\apattern\x12\x16\n" +
	"\x06active\x18\x02 \x01(\bR\x06active\"\xa3\x02\n" +
	"\bTaskData\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x12\n" +
	"\x04desc\x18\x02 \x01(\tR\x04desc\x12\x1a\n" +
	"\bpriority\x18\x03 \x01(\rR\bpriority\x12 \n" +
	"\x05state\x18\x04 \x01(\x0e2\n" +
	".TaskStateR\x05state\x12/\n" +
	"\n" +
	"recurrence\x18\x05 \x01(\v2\x0f.TaskRecurrenceR\n" +
	"recurrence\x123\n" +
	"\ado_date\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x06doDate\x125\n" +
	"\bdue_date\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\adueDate\x12\x12\n" +
	"\x04tags\x18\t \x03(\tR\x04tags\"\x84\x01\n" +
	"\fTaskMetadata\x129\n" +
	"\n" +
	"created_on\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedOn\x129\n" +
	"\n" +
	"updated_on\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedOn\"o\n" +
	"\x11TaskUpdateRequest\x12\x15\n" +
	"\x02id\x18\x01 \x01(\v2\x05.UUIDR\x02id\x12\x1d\n" +
	"\x04data\x18\x02 \x01(\v2\t.TaskDataR\x04data\x12$\n" +
	"\x05masks\x18\x03 \x03(\x0e2\x0e.TaskFieldMaskR\x05masks\"q\n" +
	"\x12TaskUpdateResponse\x129\n" +
	"\n" +
	"updated_on\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedOn\x12 \n" +
	"\bnew_task\x18\x03 \x01(\v2\x05.TaskR\anewTask\"g\n" +
	"\x04Task\x12\x15\n" +
	"\x02id\x18\x01 \x01(\v2\x05.UUIDR\x02id\x12\x1d\n" +
	"\x04data\x18\x02 \x01(\v2\t.TaskDataR\x04data\x12)\n" +
	"\bmetadata\x18\x03 \x01(\v2\r.TaskMetadataR\bmetadata\"S\n" +
	"\x0fNewTaskResponse\x12\x15\n" +
	"\x02id\x18\x01 \x01(\v2\x05.UUIDR\x02id\x12)\n" +
	"\bmetadata\x18\x02 \x01(\v2\r.TaskMetadataR\bmetadata\"'\n" +
	"\bTaskList\x12\x1b\n" +
	"\x05tasks\x18\x01 \x03(\v2\x05.TaskR\x05tasks\"'\n" +
	"\bUserList\x12\x1b\n" +
	"\x05users\x18\x01 \x03(\v2\x05.UserR\x05users\"7\n" +
	"\x03JWT\x12\x16\n" +
	"\x06access\x18\x01 \x01(\tR\x06access\x12\x18\n" +
	"\arefresh\x18\x02 \x01(\tR\arefresh\"H\n" +
	"\rLoginResponse\x12\x19\n" +
	"\x04user\x18\x01 \x01(\v2\x05.UserR\x04user\x12\x1c\n" +
	"\x06tokens\x18\x02 \x01(\v2\x04.JWTR\x06tokens\"S\n" +
	"\x11UserSignupRequest\x12\x1d\n" +
	"\x04user\x18\x01 \x01(\v2\t.UserDataR\x04user\x12\x1f\n" +
	"\vuser_secret\x18\x02 \x01(\tR\n" +
	"userSecret\"4\n" +
	"\x0eRefreshRequest\x12\"\n" +
	"\frefreshToken\x18\x01 \x01(\tR\frefreshToken\"D\n" +
	"\x13ChangePasswdRequest\x12\x15\n" +
	"\x02id\x18\x01 \x01(\v2\x05.UUIDR\x02id\x12\x16\n" +
	"\x06secret\x18\x02 \x01(\tR\x06secret\"'\n" +
	"\rPasswdMessage\x12\x16\n" +
	"\x06secret\x18\x01 \x01(\tR\x06secret*M\n" +
	"\tTaskState\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\v\n" +
	"\aPENDING\x10\x01\x12\v\n" +
	"\aONGOING\x10\x02\x12\b\n" +
	"\x04DONE\x10\x03\x12\v\n" +
	"\aBLOCKED\x10\x04*W\n" +
	"\rTaskFieldMask\x12\t\n" +
	"\x05TITLE\x10\x00\x12\b\n" +
	"\x04DESC\x10\x01\x12\f\n" +
	"\bPRIORITY\x10\x02\x12\t\n" +
	"\x05STATE\x10\x03\x12\x0e\n" +
	"\n" +
	"RECURRENCE\x10\x04\x12\b\n" +
	"\x04TAGS\x10\a2\xc4\x03\n" +
	"\x05Rafta\x120\n" +
	"\vGetAllTasks\x12\x16.google.protobuf.Empty\x1a\t.TaskList\x12\x17\n" +
	"\aGetTask\x12\x05.UUID\x1a\x05.Task\x12,\n" +
	"\vGetUserInfo\x12\x16.google.protobuf.Empty\x1a\x05.User\x12<\n" +
	"\n" +
	"DeleteUser\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\x12?\n" +
	"\x11UpdateCredentials\x12\x0e.PasswdMessage\x1a\x1a.google.protobuf.Timestamp\x127\n" +
	"\x0eUpdateUserInfo\x12\t.UserData\x1a\x1a.google.protobuf.Timestamp\x12&\n" +
	"\aNewTask\x12\t.TaskData\x1a\x10.NewTaskResponse\x12+\n" +
	"\n" +
	"DeleteTask\x12\x05.UUID\x1a\x16.google.protobuf.Empty\x125\n" +
	"\n" +
	"UpdateTask\x12\x12.TaskUpdateRequest\x1a\x13.TaskUpdateResponse2\x9d\x03\n" +
	"\x05Admin\x120\n" +
	"\vGetAllUsers\x12\x16.google.protobuf.Empty\x1a\t.UserList\x12\x17\n" +
	"\aGetUser\x12\x05.UUID\x1a\x05.User\x12 \n" +
	"\fGetUserTasks\x12\x05.UUID\x1a\t.TaskList\x12A\n" +
	"\x11UpdateCredentials\x12\x14.ChangePasswdRequest\x1a\x16.google.protobuf.Empty\x125\n" +
	"\aNewUser\x12\x12.UserSignupRequest\x1a\x16.google.protobuf.Empty\x12+\n" +
	"\n" +
	"DeleteUser\x12\x05.UUID\x1a\x16.google.protobuf.Empty\x12+\n" +
	"\n" +
	"UpdateUser\x12\x05.User\x1a\x16.google.protobuf.Empty\x12!\n" +
	"\fGetUserRoles\x12\x05.UUID\x1a\n" +
	".UserRoles\x120\n" +
	"\x0fUpdateUserRoles\x12\x05.UUID\x1a\x16.google.protobuf.Empty2\x8e\x01\n" +
	"\x04Auth\x12,\n" +
	"\x06Signup\x12\x12.UserSignupRequest\x1a\x0e.LoginResponse\x12/\n" +
	"\x05Login\x12\x16.google.protobuf.Empty\x1a\x0e.LoginResponse\x12'\n" +
	"\aRefresh\x12\x16.google.protobuf.Empty\x1a\x04.JWTB,Z*github.com/ChausseBenjamin/rafta/pkg/modelb\x06proto3"

var (
	file_schema_proto_rawDescOnce sync.Once
	file_schema_proto_rawDescData []byte
)

func file_schema_proto_rawDescGZIP() []byte {
	file_schema_proto_rawDescOnce.Do(func() {
		file_schema_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_schema_proto_rawDesc), len(file_schema_proto_rawDesc)))
	})
	return file_schema_proto_rawDescData
}

var file_schema_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_schema_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_schema_proto_goTypes = []any{
	(TaskState)(0),                 // 0: TaskState
	(TaskFieldMask)(0),             // 1: TaskFieldMask
	(*UUID)(nil),                   // 2: UUID
	(*UserData)(nil),               // 3: UserData
	(*UserRoles)(nil),              // 4: UserRoles
	(*UpdateUserRolesRequest)(nil), // 5: UpdateUserRolesRequest
	(*UserMetadata)(nil),           // 6: UserMetadata
	(*User)(nil),                   // 7: User
	(*TaskRecurrence)(nil),         // 8: TaskRecurrence
	(*TaskData)(nil),               // 9: TaskData
	(*TaskMetadata)(nil),           // 10: TaskMetadata
	(*TaskUpdateRequest)(nil),      // 11: TaskUpdateRequest
	(*TaskUpdateResponse)(nil),     // 12: TaskUpdateResponse
	(*Task)(nil),                   // 13: Task
	(*NewTaskResponse)(nil),        // 14: NewTaskResponse
	(*TaskList)(nil),               // 15: TaskList
	(*UserList)(nil),               // 16: UserList
	(*JWT)(nil),                    // 17: JWT
	(*LoginResponse)(nil),          // 18: LoginResponse
	(*UserSignupRequest)(nil),      // 19: UserSignupRequest
	(*RefreshRequest)(nil),         // 20: RefreshRequest
	(*ChangePasswdRequest)(nil),    // 21: ChangePasswdRequest
	(*PasswdMessage)(nil),          // 22: PasswdMessage
	(*timestamppb.Timestamp)(nil),  // 23: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),          // 24: google.protobuf.Empty
}
var file_schema_proto_depIdxs = []int32{
	2,  // 0: UpdateUserRolesRequest.user_id:type_name -> UUID
	23, // 1: UserMetadata.created_on:type_name -> google.protobuf.Timestamp
	23, // 2: UserMetadata.updated_on:type_name -> google.protobuf.Timestamp
	2,  // 3: User.id:type_name -> UUID
	3,  // 4: User.data:type_name -> UserData
	6,  // 5: User.metadata:type_name -> UserMetadata
	0,  // 6: TaskData.state:type_name -> TaskState
	8,  // 7: TaskData.recurrence:type_name -> TaskRecurrence
	23, // 8: TaskData.do_date:type_name -> google.protobuf.Timestamp
	23, // 9: TaskData.due_date:type_name -> google.protobuf.Timestamp
	23, // 10: TaskMetadata.created_on:type_name -> google.protobuf.Timestamp
	23, // 11: TaskMetadata.updated_on:type_name -> google.protobuf.Timestamp
	2,  // 12: TaskUpdateRequest.id:type_name -> UUID
	9,  // 13: TaskUpdateRequest.data:type_name -> TaskData
	1,  // 14: TaskUpdateRequest.masks:type_name -> TaskFieldMask
	23, // 15: TaskUpdateResponse.updated_on:type_name -> google.protobuf.Timestamp
	13, // 16: TaskUpdateResponse.new_task:type_name -> Task
	2,  // 17: Task.id:type_name -> UUID
	9,  // 18: Task.data:type_name -> TaskData
	10, // 19: Task.metadata:type_name -> TaskMetadata
	2,  // 20: NewTaskResponse.id:type_name -> UUID
	10, // 21: NewTaskResponse.metadata:type_name -> TaskMetadata
	13, // 22: TaskList.tasks:type_name -> Task
	7,  // 23: UserList.users:type_name -> User
	7,  // 24: LoginResponse.user:type_name -> User
	17, // 25: LoginResponse.tokens:type_name -> JWT
	3,  // 26: UserSignupRequest.user:type_name -> UserData
	2,  // 27: ChangePasswdRequest.id:type_name -> UUID
	24, // 28: Rafta.GetAllTasks:input_type -> google.protobuf.Empty
	2,  // 29: Rafta.GetTask:input_type -> UUID
	24, // 30: Rafta.GetUserInfo:input_type -> google.protobuf.Empty
	24, // 31: Rafta.DeleteUser:input_type -> google.protobuf.Empty
	22, // 32: Rafta.UpdateCredentials:input_type -> PasswdMessage
	3,  // 33: Rafta.UpdateUserInfo:input_type -> UserData
	9,  // 34: Rafta.NewTask:input_type -> TaskData
	2,  // 35: Rafta.DeleteTask:input_type -> UUID
	11, // 36: Rafta.UpdateTask:input_type -> TaskUpdateRequest
	24, // 37: Admin.GetAllUsers:input_type -> google.protobuf.Empty
	2,  // 38: Admin.GetUser:input_type -> UUID
	2,  // 39: Admin.GetUserTasks:input_type -> UUID
	21, // 40: Admin.UpdateCredentials:input_type -> ChangePasswdRequest
	19, // 41: Admin.NewUser:input_type -> UserSignupRequest
	2,  // 42: Admin.DeleteUser:input_type -> UUID
	7,  // 43: Admin.UpdateUser:input_type -> User
	2,  // 44: Admin.GetUserRoles:input_type -> UUID
	2,  // 45: Admin.UpdateUserRoles:input_type -> UUID
	19, // 46: Auth.Signup:input_type -> UserSignupRequest
	24, // 47: Auth.Login:input_type -> google.protobuf.Empty
	24, // 48: Auth.Refresh:input_type -> google.protobuf.Empty
	15, // 49: Rafta.GetAllTasks:output_type -> TaskList
	13, // 50: Rafta.GetTask:output_type -> Task
	7,  // 51: Rafta.GetUserInfo:output_type -> User
	24, // 52: Rafta.DeleteUser:output_type -> google.protobuf.Empty
	23, // 53: Rafta.UpdateCredentials:output_type -> google.protobuf.Timestamp
	23, // 54: Rafta.UpdateUserInfo:output_type -> google.protobuf.Timestamp
	14, // 55: Rafta.NewTask:output_type -> NewTaskResponse
	24, // 56: Rafta.DeleteTask:output_type -> google.protobuf.Empty
	12, // 57: Rafta.UpdateTask:output_type -> TaskUpdateResponse
	16, // 58: Admin.GetAllUsers:output_type -> UserList
	7,  // 59: Admin.GetUser:output_type -> User
	15, // 60: Admin.GetUserTasks:output_type -> TaskList
	24, // 61: Admin.UpdateCredentials:output_type -> google.protobuf.Empty
	24, // 62: Admin.NewUser:output_type -> google.protobuf.Empty
	24, // 63: Admin.DeleteUser:output_type -> google.protobuf.Empty
	24, // 64: Admin.UpdateUser:output_type -> google.protobuf.Empty
	4,  // 65: Admin.GetUserRoles:output_type -> UserRoles
	24, // 66: Admin.UpdateUserRoles:output_type -> google.protobuf.Empty
	18, // 67: Auth.Signup:output_type -> LoginResponse
	18, // 68: Auth.Login:output_type -> LoginResponse
	17, // 69: Auth.Refresh:output_type -> JWT
	49, // [49:70] is the sub-list for method output_type
	28, // [28:49] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_schema_proto_init() }
func file_schema_proto_init() {
	if File_schema_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_schema_proto_rawDesc), len(file_schema_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_schema_proto_goTypes,
		DependencyIndexes: file_schema_proto_depIdxs,
		EnumInfos:         file_schema_proto_enumTypes,
		MessageInfos:      file_schema_proto_msgTypes,
	}.Build()
	File_schema_proto = out.File
	file_schema_proto_goTypes = nil
	file_schema_proto_depIdxs = nil
}
